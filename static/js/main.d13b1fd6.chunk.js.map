{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","id","text","done","todos","setTodos","className","TodoList","AddTodo","map","todo","onDoubleClick","updatedTodos","t","handleToggleTodo","style","textDecoration","DeleteTodo","onClick","window","confirm","prevTodos","filter","role","color","fontWeight","marginLeft","cursor","inputRef","useRef","onSubmit","event","preventDefault","target","elements","addTodo","value","Math","random","concat","name","placeholder","ref","type","rootElement","document","getElementById","createRoot","render"],"mappings":"mLAGe,SAASA,IACtB,MAA0BC,IAAMC,SAAS,CACvC,CAAEC,GAAI,EAAGC,KAAM,cAAeC,MAAM,GACpC,CAAEF,GAAI,EAAGC,KAAM,aAAcC,MAAM,GACnC,CAAEF,GAAI,EAAGC,KAAM,cAAeC,MAAM,KAHtC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,sBAAKC,UAAU,MAAf,UACE,2CACA,cAACC,EAAD,CAAUF,SAAUA,EAAUD,MAAOA,IACrC,cAACI,EAAD,CAASH,SAAUA,OAIzB,SAASE,EAAT,GAAwC,IAApBH,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAmBzB,OACE,6BACGD,EAAMK,KAAI,SAACC,GAAD,OACT,qBACEC,cAAe,kBAtBvB,SAA0BD,GAOxB,IAAME,EAAeR,EAAMK,KAAI,SAACI,GAAD,OAC7BA,EAAEZ,KAAOS,EAAKT,GAAd,2BAESY,GAFT,IAGMV,MAAOU,EAAEV,OAEXU,KAENR,EAASO,GAOkBE,CAAiBJ,IACtCK,MAAO,CACLC,eAAgBN,EAAKP,KAAO,eAAiB,IAHjD,UAOGO,EAAKR,KACN,cAACe,EAAD,CAAYP,KAAMA,EAAML,SAAUA,MAH7BK,EAAKT,SAUpB,SAASgB,EAAT,GAAyC,IAAnBP,EAAkB,EAAlBA,KAAML,EAAY,EAAZA,SAU1B,OACE,sBACEa,QAXJ,WACoBC,OAAOC,QAAQ,gCAE/Bf,GAAS,SAACgB,GACR,OAAOA,EAAUC,QAAO,SAACT,GAAD,OAAOA,EAAEZ,KAAOS,EAAKT,UAQ/CsB,KAAK,SACLR,MAAO,CACLS,MAAO,MACPC,WAAY,OACZC,WAAY,GACZC,OAAQ,WAPZ,eAeJ,SAASnB,EAAT,GAAgC,IAAbH,EAAY,EAAZA,SACXuB,EAAW7B,IAAM8B,SAevB,OACE,uBAAMC,SAdR,SAAuBC,GACrBA,EAAMC,iBACN,IAAM9B,EAAO6B,EAAME,OAAOC,SAASC,QAAQC,MACrC1B,EAAO,CACXT,GAAIoC,KAAKC,SACTpC,OACAC,MAAM,GAERE,GAAS,SAACgB,GACR,OAAOA,EAAUkB,OAAO7B,OAK1B,UACE,uBAAO8B,KAAK,UAAUC,YAAY,WAAWC,IAAKd,IAClD,wBAAQe,KAAK,SAAb,uBC/FN,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAClD,EAAD,S","file":"static/js/main.d13b1fd6.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\n\nexport default function App() {\n  const [todos, setTodos] = React.useState([\n    { id: 1, text: \"wash dishes\", done: false },\n    { id: 2, text: \"Do laundry\", done: false },\n    { id: 3, text: \"Take Shower\", done: false }\n  ]);\n\n  return (\n    <div className=\"App\">\n      <h1>Todo list</h1>\n      <TodoList setTodos={setTodos} todos={todos} />\n      <AddTodo setTodos={setTodos} />\n    </div>\n  );\n}\nfunction TodoList({ todos, setTodos }) {\n  function handleToggleTodo(todo) {\n    // confused by this code? Here's what it says:\n\n    // if a todo's id is equal to the one we clicked on,\n    // just update that todo's done value to its opposite,\n    // otherwise, do nothing (return it)\n\n    const updatedTodos = todos.map((t) =>\n      t.id === todo.id\n        ? {\n            ...t,\n            done: !t.done\n          }\n        : t\n    );\n    setTodos(updatedTodos);\n  }\n\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <li\n          onDoubleClick={() => handleToggleTodo(todo)}\n          style={{\n            textDecoration: todo.done ? \"line-through\" : \"\"\n          }}\n          key={todo.id}\n        >\n          {todo.text}\n          <DeleteTodo todo={todo} setTodos={setTodos} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction DeleteTodo({ todo, setTodos }) {\n  function handleDeleteTodo() {\n    const confirmed = window.confirm(\"Do you want to delete this?\");\n    if (confirmed) {\n      setTodos((prevTodos) => {\n        return prevTodos.filter((t) => t.id !== todo.id);\n      });\n    }\n  }\n\n  return (\n    <span\n      onClick={handleDeleteTodo}\n      role=\"button\"\n      style={{\n        color: \"red\",\n        fontWeight: \"bold\",\n        marginLeft: 10,\n        cursor: \"pointer\"\n      }}\n    >\n      x\n    </span>\n  );\n}\n\nfunction AddTodo({ setTodos }) {\n  const inputRef = React.useRef();\n\n  function handleAddTodo(event) {\n    event.preventDefault();\n    const text = event.target.elements.addTodo.value;\n    const todo = {\n      id: Math.random(),\n      text,\n      done: false\n    };\n    setTodos((prevTodos) => {\n      return prevTodos.concat(todo);\n    });\n  }\n\n  return (\n    <form onSubmit={handleAddTodo}>\n      <input name=\"addTodo\" placeholder=\"Add todo\" ref={inputRef} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}